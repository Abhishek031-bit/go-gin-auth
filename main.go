package main

import (
	"go-gin-auth/controllers"
	"go-gin-auth/db"
	"go-gin-auth/utils"
	"log"

	"github.com/gin-gonic/gin"
	"github.com/joho/godotenv"

	swaggerFiles "github.com/swaggo/files"
	ginSwagger "github.com/swaggo/gin-swagger"

	_ "go-gin-auth/docs" // docs is generated by Swag CLI, you have to import it.
)

// @title Go Gin Auth API
// @version 1.0
// @description This is a sample API for a Go Gin authentication service.
// @termsOfService http://swagger.io/terms/

// @contact.name API Support
// @contact.url http://www.swagger.io/support
// @contact.email support@swagger.io

// @license.name Apache 2.0
// @license.url http://www.apache.org/licenses/LICENSE-2.0.html

// @host localhost:6969
// @BasePath /
// @schemes http
// @securityDefinitions.apikey ApiKeyAuth
// @in header
// @name Authorization
func main() {
	godotenv.Load()
	router := gin.Default()
	db.ConnectDB()
	router.GET("/", controllers.HealthCheck)
	authGroup := router.Group("/auth")
	{
		authGroup.POST("/register", controllers.Register)
		authGroup.POST("/login", controllers.Login)
	}
	usersGroup := router.Group("/user")
	usersGroup.Use(utils.AuthMiddleware())
	{
		usersGroup.GET("/me", controllers.Profile)
		usersGroup.POST("/upload", controllers.UploadFile)
		usersGroup.GET("/download", controllers.ListUserFiles)
		usersGroup.GET("/download/:fileID", controllers.DownloadFile)
	}

	router.GET("/swagger/*any", ginSwagger.WrapHandler(swaggerFiles.Handler))

	log.Fatal(router.Run(":6969"))
}
